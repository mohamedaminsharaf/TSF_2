# -*- coding: utf-8 -*-
"""TSF_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mMeWIt7QH6Nsp0wcMNeoGgKaHcUuzfx6
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""#Data Exploration and Analysis"""

# read the data
data = pd.read_csv('/content/Iris.csv')

# show first 5 rows from the data
data.head()

# check for missing data
data.info()

#check to see if there are nulls in the data
data.isna().sum()

#see some stastics for the data
data.describe()

#drop the id column
data.drop('Id',axis = 1,inplace=True)

data.head()

# seperate the final column from the data
X = data.iloc[:,:-1].values
y = data.iloc[:,-1]

sns.heatmap(data = data.iloc[:,:-1].corr(),annot=True)

from sklearn.cluster import KMeans

#use the elbow method to detect the best number of clusters
wcss=[]
for i in range(1,11):
    model=KMeans(n_clusters=i,init='k-means++',random_state=0)
    model.fit(X)
    wcss.append(model.inertia_)

plt.plot(range(1,11,1),wcss)
plt.title("Elbow Method")
plt.xlabel("Number Of Clusters ")
plt.ylabel("WCSS")
plt.show()

"""#The best number of clusters are 3 clusters

"""

#train the model based on the number of k clusters from the elbow method
model=KMeans(n_clusters=3,init='k-means++',random_state=0,   max_iter = 100, n_init = 10)
model.fit_predict(X)

y_pred=model.predict(X)

y_pred

plt.scatter(X[y_pred==0,0],X[y_pred==0,1],s=100,c='red',label='cluster1')
plt.scatter(X[y_pred==1,0],X[y_pred==1,1],s=100,c='blue',label='cluster2')
plt.scatter(X[y_pred==2,0],X[y_pred==2,1],s=100,c='magenta',label='cluster3')


plt.scatter(model.cluster_centers_[:,0],model.cluster_centers_[:,1],s=150,c='yellow',label='centroid')
plt.legend()

from sklearn.metrics import silhouette_score
score = silhouette_score(X, model.labels_, metric='euclidean')

score

